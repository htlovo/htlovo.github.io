DOM1
	10.1.1   Node类型 DOM1 级定义了一个Node 接口，该接口将由DOM中的所有节点类型实现。这个Node 接口在JavaScript 中是作为Node 类型实现的；除了IE 之外，在其他所有浏览器中都可以访问到这个类型。JavaScript中的所有节点类型都继承自Node 类型，因此所有节点类型都共享着相同的基本属性和方法。 

	nodeType 属性，用于表明节点的类型。节点类型由在 Node 类型中定义的下列12个数值常量来表示，任何节点类型必居其一：
	Node.ELEMENT_NODE(1)；
	Node.ATTRIBUTE_NODE(2)；
	Node.TEXT_NODE(3)；
	Node.CDATA_SECTION_NODE (4)；
	Node.ENTITY_REFERENCE_NODE(5)；
	Node.ENTITY_NODE(6)；
	Node.PROCESSING_INSTRUCTION_NODE(7)；
	Node.COMMENT_NODE(8)；
	Node.DOCUMENT_NODE (9)；
	Node.DOCUMENT_TYPE_NODE (10) ；
	Node.DOCUMENT_FRAGMENT_NODE(11) ；
	Node.NOTATION_NODE (12) 。 

	1. nodeName 和nodeValue 属性这两个属性的值完全取决于节点的类型。 
	if (someNode.nodeType == 1){ 
	    value = someNode.nodeName;    //nodeName 的值是元素的标签名 
	}  
	对于元素节点，nodeName 中保存的始终都是元素的标签名，而nodeValue 的值则始终为null。 

	2.节点关系

	childNodes 属性，其中保存着一个 NodeList 对象。NodeList 是一种类数组对象，用于保存一组有序的节点，可以通过位置来访问这些节点。请注意，虽然可以通过方括号语法来访问NodeList 的值，而且这个对象也有 length 属性，但它并不是 Array 的实例。NodeList 对象的独特之处在于，它实际上是基于DOM结构动态执行查询的结果，因此DOM结构的变化能够自动反映在NodeList 对象中。

	parentNode 属性，该属性指向文档树中的父节点。包含在childNodes 列表中的所有节点都具有相同的父节点，因此它们的 parentNode 属性都指向同一个节点。此外，包含在childNodes 列表中的每个节点相互之间都是同胞节点。

	previousSibling和nextSibling 属性，可以访问同一列表中的其他节点。列表中第一个节点的previousSibling 属性
	值为 null，而列表中最后一个节点的 nextSibling 属性的值同样也为 null

	firstChild 和lastChild属性分别指向其childNodes 列表中的第一个和最后一个节点。其中，someNode.firstChild 的值始终等于 someNode.childNodes[0]，而someNode.lastChild 的值始终等于someNode. childNodes [someNode.childNodes.length-1]。在只有一个子节点的情况下，firstChild 和lastChild 指向同一个节点。

	hasChildNodes()方法，这个方法在节点包含一或多个子节点的情况下返回true

	ownerDocument属性指向表示整个文档的文档节点。

	3.操作节点

	appendChild()方法用于向childNodes列表的末尾添加一个节点。返回新增的节点

	insertBefore()方法。这个方法接受两个参数：要插入的节点和作为参照的节点。插入节点后，被插入的节点会变成参照节点的前一个同胞节点（previousSibling ），同时被方法返回。如果参照节点是null，则insertBefore()与appendChild()执行相同的操作

	replaceChild()方法接受的两个参数是：要插入的节点和要替换的节点。要替换的节点将由这个方法返回并从文档树中被移除，同时由要插入的节点占据其位置。

	removeChild() 方法。这个方法接受一个参数，即要移除的节点。被移除的节点将成为方法的返回值与使用replaceChild()方法一样，通过 removeChild() 移除的节点仍然为文档所有，只不过在文档中已经没有了自己的位置。

	4.其他方法

10.1.2   Document 类型 
	JavaScript 通过Document 类型表示文档。在浏览器中，document 对象是HTMLDocument（继承
	自Document 类型）的一个实例，表示整个 HTML 页面。而且，document 对象是window 对象的一个
	属性，因此可以将其作为全局对象来访问。Document 节点具有下列特征： 
	nodeType 的值为9	
	nodeName 的值为"#document" 	
	nodeValue 的值为null	
	parentNode 的值为null	
	ownerDocument 的值为  null	
	其子节点可能是一个DocumentType（最多一个）、Element（最多一个）、ProcessingInstruction或Comment。

	1. 文档的子节点 
虽然DOM标准规定Document 节点的子节点可以是DocumentType、Element、ProcessingIn- 
struction 或Comment，但还有两个内置的访问其子节点的快捷方式。第一个就是

	documentElement属性，该属性始终指向HTML 页面中的<html>元素，与firstChild 和childNodes[0] 的值相同，都指向<html>
	元素。 
	作为 HTMLDocument的实例，document 对象还有一个 body 属性，直接指向<body> 元素。

	2. 文档信息 
	作为HTMLDocument的一个实例，document 对象还有一些标准的Document 对象所没有的属性。
	这些属性提供了document 对象所表现的网页的一些信息。

	title 属性，包含着<title>元素中的文本——修改title 属性的值不会改变<title>元素。
 

 
	URL 属性中包含页面完整的URL （即地址栏中显示的URL ），
	domain 属性中只包含页面的域名
	referrer属性中则保存着链接到当前页面的那个页面的URL 。在没有来源页面的情况下，referrer 属性中可能
	会包含空字符串。所有这